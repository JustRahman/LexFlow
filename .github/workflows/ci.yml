name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: lexflow
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: lexflow_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        cd backend
        pip install -r requirements.txt

    - name: Run linters
      run: |
        cd backend
        ruff check app/
        mypy app/

    - name: Run tests
      run: |
        cd backend
        pytest --cov=app tests/
      env:
        DATABASE_URL: postgresql+asyncpg://lexflow:test_password@localhost:5432/lexflow_test
        REDIS_URL: redis://localhost:6379/0
        SECRET_KEY: test_secret_key
        STRIPE_SECRET_KEY: sk_test_dummy
        STRIPE_PUBLISHABLE_KEY: pk_test_dummy
        STRIPE_WEBHOOK_SECRET: whsec_dummy
        S3_ENDPOINT_URL: http://localhost:9000
        S3_ACCESS_KEY_ID: test
        S3_SECRET_ACCESS_KEY: test
        S3_BUCKET_NAME: test
        S3_REGION: us-east-1

  frontend-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Run linter
      run: |
        cd frontend
        npm run lint

    - name: Run type check
      run: |
        cd frontend
        npm run type-check

    - name: Build
      run: |
        cd frontend
        npm run build
